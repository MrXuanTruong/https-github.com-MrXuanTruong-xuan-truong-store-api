// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.Entity;

namespace Store.Entity.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200919061713_AddTableOrders")]
    partial class AddTableOrders
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Store.Entity.Domains.Account", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AccountId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("UpdatedBy");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1L,
                            CreatedDate = new DateTime(2020, 9, 19, 6, 17, 12, 698, DateTimeKind.Utc).AddTicks(7378),
                            DateOfBirth = new DateTime(1991, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "locxtit@gmail.com",
                            FullName = "Admin",
                            Password = "e10adc3949ba59abbe56e057f20f883e",
                            Phone = "0986210955",
                            UpdatedDate = new DateTime(2020, 9, 19, 6, 17, 12, 698, DateTimeKind.Utc).AddTicks(8398),
                            Username = "admin"
                        },
                        new
                        {
                            AccountId = 2L,
                            CreatedDate = new DateTime(2020, 9, 19, 6, 17, 12, 698, DateTimeKind.Utc).AddTicks(9488),
                            DateOfBirth = new DateTime(1991, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "locxtit1@gmail.com",
                            FullName = "locxtit",
                            Password = "e10adc3949ba59abbe56e057f20f883e",
                            Phone = "0986210955",
                            UpdatedDate = new DateTime(2020, 9, 19, 6, 17, 12, 698, DateTimeKind.Utc).AddTicks(9506),
                            Username = "locxtit"
                        });
                });

            modelBuilder.Entity("Store.Entity.Domains.Account", b =>
                {
                    b.HasOne("Store.Entity.Domains.Account", "CreatedAccount")
                        .WithMany()
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Store.Entity.Domains.Account", "UpdatedAccount")
                        .WithMany()
                        .HasForeignKey("UpdatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
